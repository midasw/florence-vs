@model IEnumerable<BackOffice_ASP.Models.Announcement>

@{
    string SortOrder = ViewData["SortOrder"] as string;
    string ArrowUpClassName = "bi-arrow-up";
    string ArrowDownClassName = "bi-arrow-down";

    ViewData["SubjectSortParm"] = SortOrder == "subject_asc" ? "subject_desc" : "subject_asc";
    ViewData["DateSortParm"] = SortOrder == "date_asc" ? "" : "date_asc";

    ViewData["SubjectIconClass"] = SortOrder == "subject_asc" ? ArrowDownClassName :
                                   SortOrder == "subject_desc" ? ArrowUpClassName : null;

    ViewData["DateIconClass"] = SortOrder == "date_desc" ? ArrowUpClassName :
                                SortOrder == "date_asc" ? ArrowDownClassName : null;

    ViewData["Title"] = "Announcements";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h1>@ViewData["Title"]</h1>
</div>

<div class="bg-light">
    <div class="container">
        <div class="btn-toolbar justify-content-between px-2 py-3" role="toolbar" aria-label="Toolbar with button groups">
            <div class="btn-group" role="group">
                <a asp-action="Create" class="btn btn-primary">
                    @*<i class="bi-plus-circle"></i>*@
                    New Announcement
                </a>
            </div>
            <div class="input-group">
                <form class="form-inline">
                    <div class="input-group">
                        <input class="form-control" type="search" placeholder="Search" aria-label="Search">
                        <div class="input-group-append">
                            <button class="btn btn-secondary" type="submit">Go</button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="btn-group">
                <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    With selected
                </button>
                <div class="dropdown-menu dropdown-menu-right">
                    <button class="dropdown-item btn-secondary" type="button">Publish</button>
                    <button class="dropdown-item btn-secondary" type="button">Unpublish</button>
                    <button class="dropdown-item btn-secondary text-danger" type="button">Delete</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <table class="table table-hover js-table-check">
        <thead>
            <tr>
                <th height="1" class="px-0">
                    <label class="d-block h-100 px-2 mb-0 text-center">
                        <input type="checkbox" class="align-middle">
                    </label>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sorting="@ViewData["SubjectSortParm"]">
                        @Html.DisplayNameFor(model => model.Subject)
                        @if (ViewData["SubjectIconClass"] != null)
                        {
                            <i class="@ViewData["SubjectIconClass"]"></i>
                        }
                    </a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Body)
                </th>
                <th>
                    <a asp-action="Index" asp-route-sorting="@ViewData["DateSortParm"]">
                        Last Edit
                        @if (ViewData["DateIconClass"] != null)
                        {
                            <i class="@ViewData["DateIconClass"]"></i>
                        }
                    </a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="@(!item.Published ? "text-muted" : "")">
                    <td height="1" class="px-0">
                        <label class="d-block h-100 px-2 mb-0 text-center">
                            <input type="checkbox" class="align-middle">
                        </label>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Subject)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Body)
                    </td>
                    <td>
                        <time datetime="@item.DateEdited" title="@item.DateEdited">
                            @item.DateEdited.TimeAgo()
                        </time>
                    </td>
                    <td class="text-right">
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        @*<a asp-action="Details" asp-route-id="@item.Id">Details</a> |*@
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    $(function () {
        let $tables = $(".js-table-check");

        $tables.each(function (i, table) {
            let $tbody = $('tbody', table);
            let $checkAll = $("thead input[type='checkbox']", table).first();

            $tbody.on('change', "input[type='checkbox']", function () {
                $(this).closest('tr').toggleClass("table-active", this.checked);

                let $checks = $("input[type='checkbox']", $tbody);

                if (this.checked && $checks.not(':checked').length === 0) {
                    $checkAll.prop({
                        indeterminate: false,
                        checked: true
                    });
                }
                else if ($checks.filter(':checked').length === 0) {
                    $checkAll.prop({
                        indeterminate: false,
                        checked: false
                    });
                }
                else {
                    $checkAll.prop({
                        indeterminate: true,
                        checked: false
                    });
                }
            });

            $checkAll.on('change', function () {
                $("input[type='checkbox']", $tbody).prop('checked', this.checked);
                $('tr', $tbody).toggleClass("table-active", this.checked);
            });
        });
    });
</script>
